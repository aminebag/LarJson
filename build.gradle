plugins {
    id 'java'
}

plugins {
    id 'jacoco'
}

test {
    finalizedBy jacocoTestReport // report is always generated after tests run
}
jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}

group 'com.aminebag.larjson'
version '1.0.0-SNAPSHOT'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

repositories {
    mavenCentral()
}

sourceSets {
    benchmark {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}

configurations {
    benchmarkImplementation.extendsFrom implementation
    benchmarkRuntimeOnly.extendsFrom runtimeOnly
}

test {
    useJUnitPlatform()
}

dependencies {
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.11.2'
    implementation group: 'org.springframework', name: 'spring-core', version: '5.2.5.RELEASE'
    implementation group: 'com.google.guava', name: 'guava', version: '29.0-jre'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
    implementation group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.6.2'
    testImplementation group: 'org.hibernate', name: 'hibernate-validator', version: '6.1.5.Final'

    testRuntimeOnly group: 'javax.el', name: 'javax.el-api', version: '3.0.0'
    testRuntimeOnly group: 'org.glassfish.web', name: 'javax.el', version: '2.2.6'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.2'

    benchmarkImplementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.11.2'
    benchmarkImplementation group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
    benchmarkImplementation group: 'org.json', name: 'json', version: '20200518'

}

task copyBenchmarkResources() {
    outputs.upToDateWhen { false }
    mkdir 'build/resources/benchmark'
    doLast {
        copy {
            from 'src/benchmark/resources'
            into 'build/resources/benchmark'
        }
    }
}

processBenchmarkResources {
    enabled = false
}

task benchmark(type: JavaExec) {
    group = "Execution"
    description = "Run the JSON mappers benchmark"
    classpath = sourceSets.benchmark.runtimeClasspath
    main = "com.aminebag.larjson.benchmark.JsonMappersBenchmark"
    dependsOn copyBenchmarkResources
    jvmArgs = ['-Xms4g', '-Xmx4g']
}

task generateJsonData(type: JavaExec) {
    group = "Execution"
    description = "Generate JSON data for the benchmark"
    classpath = sourceSets.benchmark.runtimeClasspath
    main = "com.aminebag.larjson.benchmark.JsonDataGenerator"
    dependsOn copyBenchmarkResources
}


